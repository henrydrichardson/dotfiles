set nocompatible
set exrc
set secure
set number
set noerrorbells


let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif


call plug#begin()

" Functionality Plugins.
Plug 'junegunn/fzf', {'do': { -> fzf#install() } }
Plug 'tpope/vim-fugitive'
Plug 'dense-analysis/ale'
Plug 'vim-airline/vim-airline'
" Syntax Plugins.
Plug 'hashivim/vim-vagrant'
Plug 'hashivim/vim-terraform'

call plug#end()


let g:netrw_liststyle=3
let g:netrw_keepdir=0
color elfpriest

"ListChars Options
set listchars=trail:â–®,tab:>-,eol:$

au Filetype sh set tabstop=4 softtabstop=4 shiftwidth=4 expandtab

au BufRead,BufNewFile *.tf set filetype=terraform syntax=tf
autocmd FileType netrw setl bufhidden=delete

"Define Global Fixers for ALE
let g:ale_fixers = {
\   '*': ['remove_trailing_lines', 'trim_whitespace'],
\}

"Custom Mapping to FZF
nnoremap <silent> <C-p> :FZF<CR>

"Custom Maping to ALEFix
map <F4> :ALEFix<CR>
map <F3> :ALENext<CR>

"Define Global Linter Messages for ALE
let g:ale_echo_msg_format = '%linter%: %s'

let g:ale_virtualtext_cursor = 'disabled'
