scriptencoding utf-8

set exrc
set secure
set number
set noerrorbells
set noshowmode

set backspace=indent,eol,start

augroup customAutoCommands
	au!
	au BufRead,BufNewFile *.tf set filetype=terraform syntax=tf
augroup END


let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
	silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	autocmd customAutoCommands VimEnter * PlugInstall --sync | source $MYVIMRC
endif


call plug#begin()

" Color Scheme Plugin
Plug 'EdenEast/nightfox.nvim'

" Functionality Plugins.
Plug 'junegunn/fzf', {'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'nanotee/zoxide.vim'
Plug 'tpope/vim-fugitive'
Plug 'dense-analysis/ale'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'lambdalisue/fern.vim'
Plug 'lambdalisue/fern-hijack.vim'
" Syntax Plugins.
Plug 'hashivim/vim-vagrant'
Plug 'hashivim/vim-terraform'

call plug#end()

colorscheme carbonfox

set scrolloff=10

"ListChars Options
set listchars=trail:▮,tab:>-,eol:$

"Define Global Fixers for ALE
let g:ale_fixers = {'*': ['remove_trailing_lines', 'trim_whitespace'],}

"Custom Mapping to FZF
nnoremap <silent> <C-p> :FZF<CR>

"Custom Mapping to ALEFix
map <F4> :ALEFix<CR>
map <F3> :ALENext<CR>

"Define Global Linter Messages for ALE
let g:ale_echo_msg_format = '%linter%: %s'

let g:ale_virtualtext_cursor = 'disabled'

let g:ale_completion_enabled = 1

"Airline Configuration
let g:airline_theme = 'deus'
let g:airline#extensions#ale#enabled = 1
let g:airline_experimental = 1
let g:airline_detect_spell = 1
let g:airline_powerline_fonts = 1

"Airline Symbols Override

if !exists('g:airline_symbols')
	let g:airline_symbols = {}
endif
let g:airline_symbols.linenr = ' '
let g:airline_symbols.maxlinenr = ''
let g:airline_symbols.colnr = ':'
